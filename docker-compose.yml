version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
    environment:
      # Database configuration
      - POSTGRES_URI=${POSTGRES_URI}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - INIT_DB=${INIT_DB:-false}
      
      # AWS S3 Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - USE_S3_STORAGE=${USE_S3_STORAGE}
      
      # Python settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    command: >
      bash -c "
        if [ \"$$INIT_DB\" = \"true\" ]; then
          python init_sample_data.py
        fi
        streamlit run 1_Dashboard.py --server.port=8080 --server.address=0.0.0.0
      "

# Use external database for local development
# This is commented out because in App Runner we'll use an external RDS database
# Uncomment this if you want to use a local database for development
#  db:
#    image: postgres:14
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
#    ports:
#      - "5432:5432"
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

volumes:
  postgres_data: 